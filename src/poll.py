from datetime import datetime
from src.access import check_white_list
from src.bot import get_bot
from src.teams import choose_team_num
from src.storage import MemoryStorage

bot = get_bot()


@bot.message_handler(commands=['start_poll'])
def poll_handler(message):
    if check_white_list(message.from_user.id):
        poll = bot.send_poll(
            chat_id=message.chat.id,
            question='–ö—Ç–æ –±—É–¥–µ—Ç —Å–µ–≥–æ–¥–Ω—è –∏–≥—Ä–∞—Ç—å?',
            options=['‚òëÔ∏è –ë—É–¥—É, –∫–∞–∫ –æ–±—ã—á–Ω–æ –≤ 22:00',
                     'ü§î –ë—É–¥—É, –Ω–æ —Ç–æ—á–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ–∫–∞ –Ω–µ –º–æ–≥—É —Å–∫–∞–∑–∞—Ç—å',
                     'üïë –ü—Ä–µ–¥–ª–æ–∂—É –¥—Ä—É–≥–æ–µ –≤—Ä–µ–º—è (–Ω–∞–ø–∏—à—É –Ω–∏–∂–µ)',
                     'ü§° –ü–æ–∫–∞ –Ω–µ –∑–Ω–∞—é, –µ—Å–ª–∏ –±—É–¥–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫ 22:00',
                     'üôÖ‚Äç‚ôÇÔ∏è –°–µ–≥–æ–¥–Ω—è –Ω–µ —Å–º–æ–≥—É'],
            is_anonymous=False,
            allows_multiple_answers=True,
            close_date=datetime.combine(datetime.today().date(), datetime.min.time()),
            reply_to_message_id=message.id
        )
        MemoryStorage.polls_locations[poll.poll.id] = message.chat.id
        MemoryStorage.get_instance(message.chat.id).last_poll_results = {}


@bot.message_handler(commands=['no_clowns_poll'])
def poll_handler(message):
    if check_white_list(message.from_user.id):
        bot.send_poll(
            chat_id=message.chat.id,
            question='–°–µ–≥–æ–¥–Ω—è –∫–ª–æ—É–Ω–æ–≤ –Ω–µ –±—É–¥–µ—Ç))) –ö—Ç–æ –±—É–¥–µ—Ç —Å–µ–≥–æ–¥–Ω—è –∏–≥—Ä–∞—Ç—å –≤ –í–ö? –ì–æ–ª–æ—Å—É—é—Ç –≤—Å–µ!!!',
            options=['üëç –ë—É–¥—É, –µ—Å–ª–∏ –Ω–∞–±–µ—Ä—ë—Ç—Å—è —Ö–æ—Ç—è –±—ã 5 —á–µ–ª–æ–≤–µ–∫',
                     'üëé –ù–µ –±—É–¥—É, –Ω–æ –Ω–∏–∂–µ –Ω–∞–ø–∏—à—É –ø—Ä–∏—á–∏–Ω—É —Ç–æ–≥–æ, –ø–æ—á–µ–º—É —è –ø—Ä–æ–ø—É—Å–∫–∞—é —Ç–∞–∫–∏–µ –≤–∞–∂–Ω—ã–µ –∫–∞—Ç–∫–∏ –≤ –í–ö)'],
            is_anonymous=False,
            allows_multiple_answers=False,
            close_date=datetime.combine(datetime.today().date(), datetime.min.time()),
            reply_to_message_id=message.id
        )


@bot.callback_query_handler(func=lambda call: call.data == 'last_poll_participants_btn')
def handle_last_poll_participants_btn(call):
    if MemoryStorage.get_instance(call.message.chat.id).last_poll_results:
        polled_players = {}
        for player_id in MemoryStorage.get_instance(call.message.chat.id).last_poll_results:
            if 0 in MemoryStorage.get_instance(call.message.chat.id).last_poll_results[player_id] or 1 in \
                    MemoryStorage.get_instance(call.message.chat.id).last_poll_results[player_id]:
                polled_players[player_id] = True

        bot.send_message(chat_id=call.message.chat.id,
                         text=f'–°—É–¥—è –ø–æ –æ–ø—Ä–æ—Å—É –∏–≥—Ä–æ–∫–æ–≤ –±—É–¥–µ—Ç: *{len(polled_players)}*',
                         parse_mode='Markdown')
        choose_team_num(call.message, polled_players)
    else:
        bot.send_message(chat_id=call.message.chat.id, text='–û–ø—Ä–æ—Å–Ω—ã–π –ª–∏—Å—Ç –ø—É—Å—Ç –∏–ª–∏ –Ω–∏–∫—Ç–æ –Ω–µ –ø—Ä–æ–≥–æ–ª–æ—Å–≤–∞–ª "–ë—É–¥—É...". –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –æ–ø—Ä–æ—Å.')


@bot.poll_answer_handler()
def handle_poll_answer(poll_answer):
    poll_id = poll_answer.poll_id
    player_id = poll_answer.user.id
    option_ids = poll_answer.option_ids
    chat_id = MemoryStorage.get_poll_location(poll_id)
    MemoryStorage.get_instance(chat_id).last_poll_results[player_id] = option_ids
