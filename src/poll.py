from datetime import datetime
from telebot.apihelper import ApiTelegramException
from src.access import check_white_list_decorator
from src.bot import get_bot_instance
from src.parse_config import get_players
from src.tag_players import start_tag_not_polled_players, subscribe_retracted_player, unsubscribe_polled_player
from src.teams import choose_team_num
from src.storage import MemoryStorage

bot = get_bot_instance()


@bot.message_handler(commands=['start_poll'])
@check_white_list_decorator(bot_instance=bot)
def poll_handler(message):
    poll = bot.send_poll(
        chat_id=message.chat.id,
        question='–ö—Ç–æ –±—É–¥–µ—Ç —Å–µ–≥–æ–¥–Ω—è –∏–≥—Ä–∞—Ç—å?',
        options=['‚òëÔ∏è –ë—É–¥—É, –∫–∞–∫ –æ–±—ã—á–Ω–æ –≤ 22:00',
                 'ü§î –ë—É–¥—É, –Ω–æ —Ç–æ—á–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ–∫–∞ –Ω–µ –º–æ–≥—É —Å–∫–∞–∑–∞—Ç—å',
                 'üïë –ü—Ä–µ–¥–ª–æ–∂—É –¥—Ä—É–≥–æ–µ –≤—Ä–µ–º—è (–Ω–∞–ø–∏—à—É –Ω–∏–∂–µ)',
                 'ü§° –ü–æ–∫–∞ –Ω–µ –∑–Ω–∞—é, –µ—Å–ª–∏ –±—É–¥–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫ 22:00',
                 'üôÖ‚Äç‚ôÇÔ∏è –°–µ–≥–æ–¥–Ω—è –Ω–µ —Å–º–æ–≥—É'],
        is_anonymous=False,
        allows_multiple_answers=False,
        close_date=datetime.combine(datetime.today().date(), datetime.min.time()),
        reply_to_message_id=message.id
    )
    MemoryStorage.polls_locations[poll.poll.id] = message.chat.id
    MemoryStorage.get_instance(message.chat.id).last_poll_results = {}
    MemoryStorage.get_instance(message.chat.id).last_poll_id = poll.poll.id

    try:
        if MemoryStorage.get_instance(message.chat.id).last_poll_message_id:
            bot.unpin_chat_message(message.chat.id, MemoryStorage.get_instance(message.chat.id).last_poll_message_id)
        else:
            chat_info = bot.get_chat(message.chat.id)
            if chat_info.pinned_message and chat_info.pinned_message.content_type == 'poll':
                bot.unpin_chat_message(message.chat.id, chat_info.pinned_message.message_id)

        MemoryStorage.get_instance(message.chat.id).last_poll_message_id = poll.message_id
        bot.pin_chat_message(message.chat.id, poll.message_id)

    except ApiTelegramException as e:
        bot.send_message(chat_id=message.chat.id,
                         text=f'‚ùó–ó–∞–ø—Ä–æ—Å –∫ Telegram API –Ω–µ —É–¥–∞–ª—Å—è.\n'
                              f'\n–ö–æ–¥: {e.error_code}'
                              f'\n–û–ø–∏—Å–∞–Ω–∏–µ: {e.description}')

    not_polled_players = {}
    for player_id in get_players():
        not_polled_players[str(player_id)] = True
    start_tag_not_polled_players(message, not_polled_players)


@bot.message_handler(commands=['no_clowns_poll'])
@check_white_list_decorator(bot_instance=bot)
def poll_handler(message):
    poll = bot.send_poll(
        chat_id=message.chat.id,
        question='–°–µ–≥–æ–¥–Ω—è –∫–ª–æ—É–Ω–æ–≤ –Ω–µ –±—É–¥–µ—Ç))) –ö—Ç–æ –±—É–¥–µ—Ç —Å–µ–≥–æ–¥–Ω—è –∏–≥—Ä–∞—Ç—å –≤ –í–ö? –ì–æ–ª–æ—Å—É—é—Ç –≤—Å–µ!!!\n¬©–î–º–∏—Ç—Ä–æ',
        options=['üëç –ë—É–¥—É, –µ—Å–ª–∏ –Ω–∞–±–µ—Ä—ë—Ç—Å—è —Ö–æ—Ç—è –±—ã 5 —á–µ–ª–æ–≤–µ–∫',
                 'üëé –ù–µ –±—É–¥—É, –Ω–æ –Ω–∏–∂–µ –Ω–∞–ø–∏—à—É –ø—Ä–∏—á–∏–Ω—É —Ç–æ–≥–æ, –ø–æ—á–µ–º—É —è –ø—Ä–æ–ø—É—Å–∫–∞—é —Ç–∞–∫–∏–µ –≤–∞–∂–Ω—ã–µ –∫–∞—Ç–∫–∏ –≤ –í–ö)'],
        is_anonymous=False,
        allows_multiple_answers=False,
        close_date=datetime.combine(datetime.today().date(), datetime.min.time()),
        reply_to_message_id=message.id
    )


@bot.poll_answer_handler()
def handle_poll_answer(poll_answer):
    poll_id = poll_answer.poll_id
    user_id = poll_answer.user.id
    option_ids = poll_answer.option_ids
    chat_id = MemoryStorage.get_poll_location(poll_id)
    # –ï—Å–ª–∏ chat_id = None, —Ç–æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ, —á—Ç–æ —ç—Ç–æ –∑–∞ –æ–ø—Ä–æ—Å -> –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞—Ç—å
    if not chat_id:
        pass
    # –ï—Å–ª–∏ user_id –Ω–µ—Ç —Å—Ä–µ–¥–∏ players -> –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞—Ç—å
    elif user_id not in get_players().keys():
        pass
    elif option_ids and poll_id == MemoryStorage.get_instance(chat_id).last_poll_id:
        MemoryStorage.get_instance(chat_id).last_poll_results[user_id] = option_ids
        unsubscribe_polled_player(chat_id, poll_answer.user)
    elif option_ids and poll_id != MemoryStorage.get_instance(chat_id).last_poll_id:
        bot.send_message(chat_id=chat_id,
                         text=f'‚ùó@{poll_answer.user.username} –ø—Ä–æ–≥–æ–ª–æ—Å—É–π—Ç–µ –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–º –æ–ø—Ä–æ—Å–µ, '
                              f'–∫–æ—Ç–æ—Ä—ã–π –∑–∞–∫—Ä–µ–ø–ª—ë–Ω –≤ —à–∞–ø–∫–µ —á–∞—Ç–∞!')
    # –ü—Ä–∏ –æ—Ç–∑—ã–≤–µ –∏–≥—Ä–æ–∫–æ–º –≥–æ–ª–æ—Å–∞ (Retract vote) option_ids = []
    elif not option_ids and poll_id == MemoryStorage.get_instance(chat_id).last_poll_id:
        MemoryStorage.get_instance(chat_id).last_poll_results[user_id] = []
        subscribe_retracted_player(chat_id, poll_answer.user)
